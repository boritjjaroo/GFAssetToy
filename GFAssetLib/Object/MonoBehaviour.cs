using System;
using System.Collections.Generic;
using System.IO;
using System.Text;

namespace GFAssetLib.Object
{
    // version : 1

    // MonoBehaviour <- Behaviour <- Component <- EditorExtension <- Object
    public class MonoBehaviour : Behaviour
    {
        public MonoBehaviour(Type type, ObjectInfo objectInfo, string containerPath) : base(type, objectInfo, containerPath)
        {
        }

        public override string GetTypeName() { return "MonoBehaviour"; }

        public override void Read(AssetReader reader)
        {
            //MonoBehaviour Base[V(1) S(-1) Array(False) 0x00008000]

            var typeHash = new byte[] { 0xFF, 0x2B, 0x07, 0xA8, 0x25, 0x32, 0xD1, 0x74, 0xF0, 0xCC, 0xE1, 0x4E, 0xE0, 0xE8, 0x28, 0x22 };
            if (!type.CheckBaseObjectVersion(1) || !type.CheckTypeHash(typeHash))
                throw new Exception("Not implemented object type.");

            base.Read(reader);

            //PPtr<GameObject> m_GameObject[V(1) S(12) Array(False) 0x00000041]
            //  int m_FileID[V(1) S(4) Array(False) 0x00000041]
            //  SInt64 m_PathID[V(1) S(8) Array(False) 0x00000041]
            //UInt8 m_Enabled[V(1) S(1) Array(False) 0x00004101]
            //PPtr<MonoScript> m_Script[V(1) S(12) Array(False) 0x00000000]
            //  int m_FileID[V(1) S(4) Array(False) 0x00800001]
            //  SInt64 m_PathID[V(1) S(8) Array(False) 0x00800001]
            //string m_Name[V(1) S(-1) Array(False) 0x00008001]
            //  Array Array[V(1) S(-1) Array(True) 0x00004001]
            //    int size[V(1) S(4) Array(False) 0x00000001]
            //    char data[V(1) S(1) Array(False) 0x00000001]
            //int clientVison[V(1) S(4) Array(False) 0x00000000]
            //string resVison[V(1) S(-1) Array(False) 0x00008000]
            //  Array Array[V(1) S(-1) Array(True) 0x00004001]
            //    int size[V(1) S(4) Array(False) 0x00000001]
            //    char data[V(1) S(1) Array(False) 0x00000001]
            //string resUrl[V(1) S(-1) Array(False) 0x00008000]
            //  Array Array[V(1) S(-1) Array(True) 0x00004001]
            //    int size[V(1) S(4) Array(False) 0x00000001]
            //    char data[V(1) S(1) Array(False) 0x00000001]
            //string resHttpsUrl[V(1) S(-1) Array(False) 0x00008000]
            //  Array Array[V(1) S(-1) Array(True) 0x00004001]
            //    int size[V(1) S(4) Array(False) 0x00000001]
            //    char data[V(1) S(1) Array(False) 0x00000001]
            //string appUrl[V(1) S(-1) Array(False) 0x00008000]
            //  Array Array[V(1) S(-1) Array(True) 0x00004001]
            //    int size[V(1) S(4) Array(False) 0x00000001]
            //    char data[V(1) S(1) Array(False) 0x00000001]
            //SInt64 compressDataSize[V(1) S(8) Array(False) 0x00000000]
            //SInt64 originalDataSize[V(1) S(8) Array(False) 0x00000000]
            //SInt64 compressDataSizeHE[V(1) S(8) Array(False) 0x00000000]
            //SInt64 originalDataSizeHE[V(1) S(8) Array(False) 0x00000000]
            //SInt64 compressAddDataSize[V(1) S(8) Array(False) 0x00000000]
            //SInt64 originalAddDataSize[V(1) S(8) Array(False) 0x00000000]
            //SInt64 compressAddDataSizeHE[V(1) S(8) Array(False) 0x00000000]
            //SInt64 originalAddDataSizeHE[V(1) S(8) Array(False) 0x00000000]
            //SInt64 compressJPVoiceDataSize[V(1) S(8) Array(False) 0x00000000]
            //SInt64 originalJPVoiceDataSize[V(1) S(8) Array(False) 0x00000000]
            //SInt64 compressCNVoiceDataSize[V(1) S(8) Array(False) 0x00000000]
            //SInt64 originalCNVoiceDataSize[V(1) S(8) Array(False) 0x00000000]
            //int allDataFilesCount[V(1) S(4) Array(False) 0x00000000]
            //int allDataFilesCountHE[V(1) S(4) Array(False) 0x00000000]
            //int addDataFilesCount[V(1) S(4) Array(False) 0x00000000]
            //int addDataFilesCountHE[V(1) S(4) Array(False) 0x00000000]
            //int voiceFilesCount[V(1) S(4) Array(False) 0x00000000]
            //string daBaoTime[V(1) S(-1) Array(False) 0x00008000]
            //  Array Array[V(1) S(-1) Array(True) 0x00004001]
            //    int size[V(1) S(4) Array(False) 0x00000001]
            //    char data[V(1) S(1) Array(False) 0x00000001]
            //int unityVision[V(1) S(4) Array(False) 0x00000000]
            //UInt8 hexie[V(1) S(1) Array(False) 0x00004100]
            //string AllDataFileName[V(1) S(-1) Array(False) 0x00008000]
            //  Array Array[V(1) S(-1) Array(True) 0x00004001]
            //    int size[V(1) S(4) Array(False) 0x00000001]
            //    char data[V(1) S(1) Array(False) 0x00000001]
            //string AllDataFileNameHE[V(1) S(-1) Array(False) 0x00008000]
            //  Array Array[V(1) S(-1) Array(True) 0x00004001]
            //    int size[V(1) S(4) Array(False) 0x00000001]
            //    char data[V(1) S(1) Array(False) 0x00000001]
            //string AddDataFileName[V(1) S(-1) Array(False) 0x00008000]
            //  Array Array[V(1) S(-1) Array(True) 0x00004001]
            //    int size[V(1) S(4) Array(False) 0x00000001]
            //    char data[V(1) S(1) Array(False) 0x00000001]
            //string AddDataFileNameHE[V(1) S(-1) Array(False) 0x00008000]
            //  Array Array[V(1) S(-1) Array(True) 0x00004001]
            //    int size[V(1) S(4) Array(False) 0x00000001]
            //    char data[V(1) S(1) Array(False) 0x00000001]
            //string JPVoiceFileName[V(1) S(-1) Array(False) 0x00008000]
            //  Array Array[V(1) S(-1) Array(True) 0x00004001]
            //    int size[V(1) S(4) Array(False) 0x00000001]
            //    char data[V(1) S(1) Array(False) 0x00000001]
            //AssetBundleData passivityAssetBundles[V(1) S(-1) Array(False) 0x00008000]
            //  Array Array[V(1) S(-1) Array(True) 0x00008000]
            //    int size[V(1) S(4) Array(False) 0x00000000]
            //    AssetBundleData data[V(1) S(-1) Array(False) 0x00008000]
            //      string assetBundleName[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      string resname[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      string hashString[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      string fileHash[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      SInt64 sizeOriginal[V(1) S(8) Array(False) 0x00000000]
            //      SInt64 sizeCompress[V(1) S(8) Array(False) 0x00000000]
            //      ResData assetAllRes[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00008000]
            //          int size[V(1) S(4) Array(False) 0x00000000]
            //          ResData data[V(1) S(-1) Array(False) 0x00008000]
            //            string pathKey[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004001]
            //                int size[V(1) S(4) Array(False) 0x00000001]
            //                char data[V(1) S(1) Array(False) 0x00000001]
            //            string resName[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004001]
            //                int size[V(1) S(4) Array(False) 0x00000001]
            //                char data[V(1) S(1) Array(False) 0x00000001]
            //            string abName[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004001]
            //                int size[V(1) S(4) Array(False) 0x00000001]
            //                char data[V(1) S(1) Array(False) 0x00000001]
            //            string prefabName[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004001]
            //                int size[V(1) S(4) Array(False) 0x00000001]
            //                char data[V(1) S(1) Array(False) 0x00000001]
            //            int hashCode[V(1) S(4) Array(False) 0x00000000]
            //            UInt8 packing[V(1) S(1) Array(False) 0x00004100]
            //            vector hasCodes[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004000]
            //                int size[V(1) S(4) Array(False) 0x00000000]
            //                int data[V(1) S(4) Array(False) 0x00000000]
            //AssetBundleData BaseAssetBundles[V(1) S(-1) Array(False) 0x00008000]
            //  Array Array[V(1) S(-1) Array(True) 0x00008000]
            //    int size[V(1) S(4) Array(False) 0x00000000]
            //    AssetBundleData data[V(1) S(-1) Array(False) 0x00008000]
            //      string assetBundleName[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      string resname[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      string hashString[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      string fileHash[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      SInt64 sizeOriginal[V(1) S(8) Array(False) 0x00000000]
            //      SInt64 sizeCompress[V(1) S(8) Array(False) 0x00000000]
            //      ResData assetAllRes[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00008000]
            //          int size[V(1) S(4) Array(False) 0x00000000]
            //          ResData data[V(1) S(-1) Array(False) 0x00008000]
            //            string pathKey[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004001]
            //                int size[V(1) S(4) Array(False) 0x00000001]
            //                char data[V(1) S(1) Array(False) 0x00000001]
            //            string resName[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004001]
            //                int size[V(1) S(4) Array(False) 0x00000001]
            //                char data[V(1) S(1) Array(False) 0x00000001]
            //            string abName[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004001]
            //                int size[V(1) S(4) Array(False) 0x00000001]
            //                char data[V(1) S(1) Array(False) 0x00000001]
            //            string prefabName[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004001]
            //                int size[V(1) S(4) Array(False) 0x00000001]
            //                char data[V(1) S(1) Array(False) 0x00000001]
            //            int hashCode[V(1) S(4) Array(False) 0x00000000]
            //            UInt8 packing[V(1) S(1) Array(False) 0x00004100]
            //            vector hasCodes[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004000]
            //                int size[V(1) S(4) Array(False) 0x00000000]
            //                int data[V(1) S(4) Array(False) 0x00000000]
            //AssetBundleData AddAssetBundles[V(1) S(-1) Array(False) 0x00008000]
            //  Array Array[V(1) S(-1) Array(True) 0x00008000]
            //    int size[V(1) S(4) Array(False) 0x00000000]
            //    AssetBundleData data[V(1) S(-1) Array(False) 0x00008000]
            //      string assetBundleName[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      string resname[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      string hashString[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      string fileHash[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      SInt64 sizeOriginal[V(1) S(8) Array(False) 0x00000000]
            //      SInt64 sizeCompress[V(1) S(8) Array(False) 0x00000000]
            //      ResData assetAllRes[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00008000]
            //          int size[V(1) S(4) Array(False) 0x00000000]
            //          ResData data[V(1) S(-1) Array(False) 0x00008000]
            //            string pathKey[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004001]
            //                int size[V(1) S(4) Array(False) 0x00000001]
            //                char data[V(1) S(1) Array(False) 0x00000001]
            //            string resName[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004001]
            //                int size[V(1) S(4) Array(False) 0x00000001]
            //                char data[V(1) S(1) Array(False) 0x00000001]
            //            string abName[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004001]
            //                int size[V(1) S(4) Array(False) 0x00000001]
            //                char data[V(1) S(1) Array(False) 0x00000001]
            //            string prefabName[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004001]
            //                int size[V(1) S(4) Array(False) 0x00000001]
            //                char data[V(1) S(1) Array(False) 0x00000001]
            //            int hashCode[V(1) S(4) Array(False) 0x00000000]
            //            UInt8 packing[V(1) S(1) Array(False) 0x00004100]
            //            vector hasCodes[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004000]
            //                int size[V(1) S(4) Array(False) 0x00000000]
            //                int data[V(1) S(4) Array(False) 0x00000000]
            //BytesData bytesData[V(1) S(-1) Array(False) 0x00008000]
            //  Array Array[V(1) S(-1) Array(True) 0x00008000]
            //    int size[V(1) S(4) Array(False) 0x00000000]
            //    BytesData data[V(1) S(-1) Array(False) 0x00008000]
            //      string fileName[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      string resname[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      int fileInABC[V(1) S(4) Array(False) 0x00000000]
            //      SInt64 sizeOriginal[V(1) S(8) Array(False) 0x00000000]
            //      SInt64 sizeCompress[V(1) S(8) Array(False) 0x00000000]
            //AssetBundleData JPVoiceAssetBundles[V(1) S(-1) Array(False) 0x00008000]
            //  Array Array[V(1) S(-1) Array(True) 0x00008000]
            //    int size[V(1) S(4) Array(False) 0x00000000]
            //    AssetBundleData data[V(1) S(-1) Array(False) 0x00008000]
            //      string assetBundleName[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      string resname[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      string hashString[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      string fileHash[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      SInt64 sizeOriginal[V(1) S(8) Array(False) 0x00000000]
            //      SInt64 sizeCompress[V(1) S(8) Array(False) 0x00000000]
            //      ResData assetAllRes[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00008000]
            //          int size[V(1) S(4) Array(False) 0x00000000]
            //          ResData data[V(1) S(-1) Array(False) 0x00008000]
            //            string pathKey[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004001]
            //                int size[V(1) S(4) Array(False) 0x00000001]
            //                char data[V(1) S(1) Array(False) 0x00000001]
            //            string resName[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004001]
            //                int size[V(1) S(4) Array(False) 0x00000001]
            //                char data[V(1) S(1) Array(False) 0x00000001]
            //            string abName[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004001]
            //                int size[V(1) S(4) Array(False) 0x00000001]
            //                char data[V(1) S(1) Array(False) 0x00000001]
            //            string prefabName[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004001]
            //                int size[V(1) S(4) Array(False) 0x00000001]
            //                char data[V(1) S(1) Array(False) 0x00000001]
            //            int hashCode[V(1) S(4) Array(False) 0x00000000]
            //            UInt8 packing[V(1) S(1) Array(False) 0x00004100]
            //            vector hasCodes[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004000]
            //                int size[V(1) S(4) Array(False) 0x00000000]
            //                int data[V(1) S(4) Array(False) 0x00000000]
            //AssetBundleData CNVoiceAssetBundles[V(1) S(-1) Array(False) 0x00008000]
            //  Array Array[V(1) S(-1) Array(True) 0x00008000]
            //    int size[V(1) S(4) Array(False) 0x00000000]
            //    AssetBundleData data[V(1) S(-1) Array(False) 0x00008000]
            //      string assetBundleName[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      string resname[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      string hashString[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      string fileHash[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      SInt64 sizeOriginal[V(1) S(8) Array(False) 0x00000000]
            //      SInt64 sizeCompress[V(1) S(8) Array(False) 0x00000000]
            //      ResData assetAllRes[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00008000]
            //          int size[V(1) S(4) Array(False) 0x00000000]
            //          ResData data[V(1) S(-1) Array(False) 0x00008000]
            //            string pathKey[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004001]
            //                int size[V(1) S(4) Array(False) 0x00000001]
            //                char data[V(1) S(1) Array(False) 0x00000001]
            //            string resName[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004001]
            //                int size[V(1) S(4) Array(False) 0x00000001]
            //                char data[V(1) S(1) Array(False) 0x00000001]
            //            string abName[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004001]
            //                int size[V(1) S(4) Array(False) 0x00000001]
            //                char data[V(1) S(1) Array(False) 0x00000001]
            //            string prefabName[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004001]
            //                int size[V(1) S(4) Array(False) 0x00000001]
            //                char data[V(1) S(1) Array(False) 0x00000001]
            //            int hashCode[V(1) S(4) Array(False) 0x00000000]
            //            UInt8 packing[V(1) S(1) Array(False) 0x00004100]
            //            vector hasCodes[V(1) S(-1) Array(False) 0x00008000]
            //              Array Array[V(1) S(-1) Array(True) 0x00004000]
            //                int size[V(1) S(4) Array(False) 0x00000000]
            //                int data[V(1) S(4) Array(False) 0x00000000]
            //vector encryptABNames[V(1) S(-1) Array(False) 0x00008000]
            //  Array Array[V(1) S(-1) Array(True) 0x0000C000]
            //    int size[V(1) S(4) Array(False) 0x00000000]
            //    string data[V(1) S(-1) Array(False) 0x00008000]
            //      Array Array[V(1) S(-1) Array(True) 0x00004001]
            //        int size[V(1) S(4) Array(False) 0x00000001]
            //        char data[V(1) S(1) Array(False) 0x00000001]
            //vector tips[V(1) S(-1) Array(False) 0x00008000]
            //  Array Array[V(1) S(-1) Array(True) 0x0000C000]
            //    int size[V(1) S(4) Array(False) 0x00000000]
            //    string data[V(1) S(-1) Array(False) 0x00008000]
            //      Array Array[V(1) S(-1) Array(True) 0x00004001]
            //        int size[V(1) S(4) Array(False) 0x00000001]
            //        char data[V(1) S(1) Array(False) 0x00000001]
            //CheckResData prefabVision[V(1) S(-1) Array(False) 0x00008000]
            //  Array Array[V(1) S(-1) Array(True) 0x00008000]
            //    int size[V(1) S(4) Array(False) 0x00000000]
            //    CheckResData data[V(1) S(-1) Array(False) 0x00008000]
            //      string url[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004001]
            //          int size[V(1) S(4) Array(False) 0x00000001]
            //          char data[V(1) S(1) Array(False) 0x00000001]
            //      vector useVision[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004000]
            //          int size[V(1) S(4) Array(False) 0x00000000]
            //          int data[V(1) S(4) Array(False) 0x00000000]
            //      vector resVision[V(1) S(-1) Array(False) 0x00008000]
            //        Array Array[V(1) S(-1) Array(True) 0x00004000]
            //          int size[V(1) S(4) Array(False) 0x00000000]
            //          Vector2f data[V(1) S(8) Array(False) 0x00200000]
            //            float x[V(1) S(4) Array(False) 0x00200000]
            //            float y[V(1) S(4) Array(False) 0x00200000]

        }

        public override string Extract(AssetReader reader, string path)
        {
            var fullPath = $"{path}{ContainerPath}";
            var directory = Path.GetDirectoryName(fullPath);

            if (!Directory.Exists(directory))
                Directory.CreateDirectory(directory);

            var fs = File.Open(fullPath, FileMode.Create);
            var writer = new AssetPrettyWriter(fs, 4);

            TypeHelper.PrettyPrint(reader, writer, type.TypeTree.GetNodes());

            writer.Close();
            return fs.Name;
        }
    }
}
